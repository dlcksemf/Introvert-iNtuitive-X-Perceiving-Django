# Generated by Django 3.2.12 on 2022-02-04 06:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Books',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book_num', models.IntegerField(primary_key=True, serialize=False)),
                ('cover_photo', models.ImageField(blank=True, upload_to='')),
                ('title', models.CharField(db_index=True, max_length=100)),
                ('writer', models.CharField(db_index=True, max_length=100)),
                ('translator', models.CharField(blank=True, max_length=100)),
                ('publisher', models.CharField(max_length=100)),
                ('published_date', models.DateField(blank=True)),
                ('ISBN', models.CharField(db_index=True, max_length=20)),
                ('story', models.TextField(blank=True)),
                ('state', models.CharField(choices=[('A', 'Available'), ('B', 'Borrowed'), ('D', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': '도서',
                'verbose_name_plural': '도서 목록',
                'ordering': ['-book_num'],
            },
        ),
        migrations.CreateModel(
            name='Wishes',
            fields=[
                ('wish_num', models.IntegerField(primary_key=True, serialize=False)),
                ('book_num', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.books')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '찜',
                'verbose_name_plural': '찜 목록',
                'ordering': ['-wish_num'],
            },
        ),
        migrations.CreateModel(
            name='LoanedBooks',
            fields=[
                ('loan_num', models.IntegerField(primary_key=True, serialize=False)),
                ('loaned_date', models.DateField(auto_now_add=True)),
                ('return_due_date', models.DateField()),
                ('returned_date', models.DateField()),
                ('return_state', models.CharField(choices=[('L', 'Loaned'), ('R', 'Register'), ('R', 'Returned'), ('D', 'Deleted')], max_length=1)),
                ('book_num', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.books')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '도서 대출',
                'verbose_name_plural': '대출 도서 목록',
                'ordering': ['-loan_num'],
            },
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application_num', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=100)),
                ('writer', models.CharField(db_index=True, max_length=100)),
                ('publisher', models.CharField(max_length=100)),
                ('ISBN', models.CharField(db_index=True, max_length=20)),
                ('state', models.CharField(choices=[('P', 'Pending'), ('O', 'Order'), ('D', 'Denied')], max_length=1)),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '도서 신청',
                'verbose_name_plural': '도서 신청 목록',
                'ordering': ['-application_num'],
            },
        ),
    ]
